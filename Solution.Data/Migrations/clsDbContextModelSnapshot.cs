// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solution.Data.EF;

namespace Solution.Data.Migrations
{
    [DbContext(typeof(clsDbContext))]
    partial class clsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Solution.Data.Entities.Brand", b =>
                {
                    b.Property<int>("Brand_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand_Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand_Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Image1.jpg");

                    b.Property<string>("Brand_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Brand_Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Solution.Data.Entities.Category", b =>
                {
                    b.Property<int>("Category_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category_Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Image1.jpg");

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Category_Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Solution.Data.Entities.Prd_Detail", b =>
                {
                    b.Property<int>("Prd_Detail_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Prd_Detail_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prd_Detail_Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prd_Detail_Image")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasDefaultValue("Image1.jpg");

                    b.Property<float>("Prd_Detail_Price")
                        .HasColumnType("real");

                    b.Property<int>("Prd_Detail_Quantity")
                        .HasColumnType("int");

                    b.HasKey("Prd_Detail_Id");

                    b.ToTable("Prd_Detail");
                });

            modelBuilder.Entity("Solution.Data.Entities.Product", b =>
                {
                    b.Property<int>("Product_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Brand_Id1")
                        .HasColumnType("int");

                    b.Property<int?>("Cate_Id")
                        .HasColumnType("int");

                    b.Property<int>("Category_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Category_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Product_Id");

                    b.HasIndex("Brand_Id");

                    b.HasIndex("Brand_Id1");

                    b.HasIndex("Cate_Id");

                    b.HasIndex("Category_Id")
                        .IsUnique();

                    b.HasIndex("Category_Id1");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Solution.Data.Entities.Product", b =>
                {
                    b.HasOne("Solution.Data.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("Brand_Id")
                        .HasConstraintName("fk_Product_Brand")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Solution.Data.Entities.Brand", null)
                        .WithMany("Product")
                        .HasForeignKey("Brand_Id1");

                    b.HasOne("Solution.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Cate_Id")
                        .HasConstraintName("fk_Product_Category")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Solution.Data.Entities.Prd_Detail", "Prd_Detail")
                        .WithOne("Product")
                        .HasForeignKey("Solution.Data.Entities.Product", "Category_Id")
                        .HasConstraintName("fk_Product_Detail")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Solution.Data.Entities.Category", null)
                        .WithMany("Product")
                        .HasForeignKey("Category_Id1");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Prd_Detail");
                });

            modelBuilder.Entity("Solution.Data.Entities.Brand", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Solution.Data.Entities.Category", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Solution.Data.Entities.Prd_Detail", b =>
                {
                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
